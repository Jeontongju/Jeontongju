<!doctype html>
<html>
  <head>
    
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">

    <!-- Bootstrap CSS -->
    <!-- <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css" integrity="sha384-zCbKRCUGaJDkqS1kPbPd7TveP5iyJE0EjAuZQTgFLD2ylzuqKfdKlfG/eSrtxUkn" crossorigin="anonymous"> -->

    <link href="../public/list.css" rel="stylesheet">
    
    <title>무슨무슨 카페!</title>
    <script src="https://kit.fontawesome.com/7f7b206c05.js" crossorigin="anonymous"></script>
  </head>
  <body>


      <%- include('nav.html') %>  <!-- 상대경로의 html삽입-->


      <h3 class="ml-2 my-3 text-center">할일 리스트</h3>

      <div class="container1 input-group mb-2">
        <input class="form-control" id="search-input">
        <button class="input-group-append btn btn-secondary" id="search">검색</button>
      </div>

      <br>

      <select id="dataPerPage" class="perPage">
        <option value="10">10개씩보기</option>
        <option value="15">15개씩보기</option>
        <option value="20">20개씩보기</option>
      </select>
      <br>
      <hr>
      

      <script src="https://code.jquery.com/jquery-3.4.1.min.js">
        //항상 스크립트 쓰기 전에는 이 j쿼리 링크 코드를 위에 적을 것
      </script>   

      <script>
        $('#search').click(function(){  //POST말고 GET요청으로 서버에게 데이터를 보내는 방식
          let input = $('#search-input').val()  //검색창에 입력한 값
          window.location.replace('/search?value=' + input) //버튼을 누르면 입력한 url로 GET요청

          if(input = null){
            window.alert("검색어를 입력하세요.")
          }
        }) 
      
      </script>
    
    <div class="container">
      
        <% for (var i = 0; i < posts.length ; i ++) { %>
        <div class="list-group-item">
          <p>글번호 : <%= posts[i]._id %></p>
          <i class="fa-solid fa-circle-chevron-right"></i>
          <a href="detail/<%= posts[i]._id %>" class="card-link">할일 : <%= posts[i].제목 %></a>   <!-- db에서 가져온 결과값의 이름 posts -->
          <p>마감날짜 : <%= posts[i].날짜 %></p>
          <button class=" btn btn-danger delete" data-id="<%= posts[i]._id %>">삭제</button>
          <a href="edit/<%= posts[i]._id %>" class="card-link">수정하기</a>
          <button class=" btn btn-secondary chat" data-id="<%= posts[i].작성자 %>">채팅</button>
        </div>
        <% } %> 
      
    </div>

    <br>
    
    


      <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

      <script>
        $('.chat').click(function(e){
          let _id = e.target.dataset.id;

          $.post('/chatroom', {채팅받는사람id : _id})   //버튼을 눌러 post요청을 하면 글 작성자 id를 실어서 보냄
          .then(()=>{
            console.log('채팅방 게시물 생성완료')
          })
        });
      </script>
      
      <script>    //html에서 자바스크립트 작성가능

        $('.delete').click(function(e){  //클래스가 delete인 요소를 클릭하면 함수 실행
          let num = e.target.dataset.id; //내가누른 요소의 data-id
          let click = $(this);
          
          $.ajax({    //ajax란 서버에 요청하는 것을 도와주는 JS문법, 이 코드 자체로는 페이지를 새로고침 할때마다 실행 하지만 click안에서 
          method : 'DELETE',                                        //실행함으로서 delete버튼을 클릭할때만 실행
          url : '/delete',
          data : {_id : num},
          }).done(function(결과){   //요청이 성공하면 실행할 함수
            console.log('성공');
            //삭제를 바로적용 시킨것처럼 보여주기 위한 fadeOut효과 적용
            click.parent('li').fadeOut(); //지금누른거의 부모 중 li태그를 찾음

          }).fail(function(xhr, textStatus, errorThrown){
            console.log(xhr, textStatus, errorThrown);
          });
        })

                
      </script>

      
          
      

    <!-- Optional JavaScript; choose one of the two! -->

    <!-- Option 1: jQuery and Bootstrap Bundle (includes Popper) -->
    <script src="https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.min.js" integrity="sha384-DfXdz2htPH0lsSSs5nCTpuj/zy4C+OGpamoFVy38MVBnE+IbbVYUew+OrCXaRkfj" crossorigin="anonymous"></script>
    
  </body>
</html>